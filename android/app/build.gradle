def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.inventorymanagement"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }

    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/*'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    buildToolsVersion '28.0.3'
    dependencies {
        // ...

        api 'com.google.firebase:firebase-ml-vision-image-label-model:16.2.0'
    }
}


flutter {
    source '../..'
}

dependencies {
    //    implementation 'com.google.android.gms:play-services-analytics:15.0.1'
    //    implementation 'com.google.firebase:firebase-core:16.0.7'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    annotationProcessor 'androidx.annotation:annotation:1.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'androidx.exifinterface:exifinterface:1.0.0-beta01'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation files('libs/gprintersdkv1.jar')
}


apply plugin: 'com.google.gms.google-services'

//com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true